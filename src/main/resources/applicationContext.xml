<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:p="http://www.springframework.org/schema/p"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
        					http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        					http://www.springframework.org/schema/aop
        					http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        					http://www.springframework.org/schema/context 
        					http://www.springframework.org/schema/context/spring-context-4.2.xsd"
        default-autowire="byType" >

	<context:component-scan base-package="com.wuxi.service,com.wuxi.dao" >
		<!-- <context:include-filter type="annotation" expression=""/>
		<context:exclude-filter type="annotation" expression=""/> -->
	</context:component-scan>
	
	<aop:aspectj-autoproxy/>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
			<!-- ResourceEditor的setAsText方法可以把字面值转换为Resource对象 -->
				<value>classpath*:*.properties</value>
			</list>
		</property>
	</bean>
	
	<bean name="operate" class="com.wuxi.service.OperateService" >
	    <!-- depends-on="bean" 前置依赖bean,前置依赖的bean会在本bean实例化之前创建好 -->
 		<!-- <constructor-arg index="" value=""/>
		<constructor-arg name="" value=""/>
		<constructor-arg name="" ref=""/> -->
		<property name="userService" ref="userService" ></property>
		<!-- <property name="car.name"  value="宝马"/> 级联属性，前提要先new Car()-->
		<!-- <property name="">
			<list>
				<value></value>
				<value></value>
				<ref bean=""/>
			</list>
		</property>-->
		<!-- <property name="">
			<set merge="">
				<ref parent="" bean=""/>
			</set>
		</property> -->
		<!-- <property name="">
			<map>
				<entry key="" value-ref=""></entry>
			</map>
		</property>
		<property name="">
			<props>
				<prop key="name">zh</prop>
			</props>
		</property>  -->
	</bean>
	
	<bean class="com.wuxi.service.animal.Pig" autowire-candidate="false" lazy-init="true"/>
	<bean class="com.wuxi.service.animal.Tiger" primary="true" scope="prototype">
		<aop:scoped-proxy/>
	</bean>
	
	<!-- 注册自定义属性编辑器 -->
	<bean id="" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="propertyEditorRegistrars">
			<list>
				<bean class="com.wuxi.property.CustomPropertyEditorRegistrar"></bean>
			</list>
		</property>
	</bean>
	
	<bean id="factory" class="com.wuxi.property.Factory">
		<property name="name" value="zh"/>
		<!-- 通过属性编辑器将字面值转换为属性类型对象 -->
		<property name="area" value="left,20"></property>
	</bean>
	
	<!-- 后处理器一般是全局bean处理，也可按照beanName特殊处理个别bean -->
	<bean id="timeRecoder" class="com.wuxi.service.TimeRecoder"></bean>
	
	<!-- spring的bean定义可以继承.一个子的bean定义可以从一个父bean定义中继承得到所有的属性,并且子bean的定义可以覆盖其通过继承得来的父bean定义的属性. -->
	<!-- <bean  id="" class="" parent="" init-method="" destroy-method="" abstract="true"/> -->
	
	<!-- <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource"/> -->
	
	<import resource="application-datasource.xml"/>
</beans>